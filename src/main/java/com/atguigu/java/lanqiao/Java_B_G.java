package com.atguigu.java.lanqiao;

import java.util.Scanner;

/*
* 试题G：数组切分
* */
public class Java_B_G {
    /*
    * G、已知一个长度为N的数组：A1，A2,A3,...,AN恰好是1~N的一个排列。现在要求你将A数组切分成若干个(最少一个，最多N个)连续的子数组，
    * 并且每个子数组中包含的整数恰好可以组成一段连续的自然数。
    * 例如：对于A={1,3,2,4},一共有5中切分方法：
    * {1}{3}{2}{4}: 每个单独的数显然是(长度为1的)一段连续的自然数。
    * {1}{3,2}{4}:{3,2}包含2到3，是一段连续的自然数，另外{1}显然也是
    * {1}{3,2,4}:包含2到4，是一段连续的自然数，另外{1}显然也是
    * {1,3,2}{4}:包括1到3，是一段连续的自然数，另外{4}显然也是
    * {1,3,2,4}: 只有一个子数组，包含1到4，是一段连续的自然数。
    * 【输入格式】：第一行包含一个整数N。第二行包含N个整数，代表A数组
    * 【输出格式】：输出一个整数表示答案。由于答案可能很大，所以输出其对1000000007取模后的值
    * 【样例输入】： 4
    *               1 3 2 4
    * 【样例输出】：5
    * */
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n = sc.nextInt();
        int arr[]=new int[n];
        for (int i = 0; i < n ; i++) {
            arr[i]=sc.nextInt();
        }


    }
}
